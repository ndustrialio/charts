apiVersion: {{ include "nio-common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "nio-common.names.fullname" . }}
  labels: {{- include "nio-common.labels.standard" . | nindent 4 }}
    ndustrial.io/component: deployment
    {{- if .Values.labels }}
    {{- include "nio-common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations: {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "nio-common.labels.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  {{- if ne .Values.updateStrategy.type "RollingUpdate" }}
  strategy:
    type: {{ .Values.updateStrategy.type | quote }}
  {{- else }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "nio-common.labels.standard" . | nindent 8 }}
        ndustrial.io/component: deployment
        {{- if .Values.labels }}
        {{- include "nio-common.tplvalues.render" ( dict "value" .Values.labels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.podLabels }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.datadog }}
        {{- include "nio-common.datadog.annotations" (dict "value" .Values.datadog "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.metrics.enabled (not .Values.metrics.serviceMonitor.enabled) }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "deployment.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "nio-common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "nio-common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "nio-common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "nio-common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "nio-common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "nio-common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "nio-common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ template "deployment.serviceAccountName" . }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds:  {{- include "nio-common.tplvalues.render" (dict "value" .Values.terminationGracePeriodSeconds "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "nio-common.names.name" . }}
          image: {{ template "deployment.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.image.debug }}
          command: ["/bin/sh", "-c"]
          args: ["while true; do sleep 30; echo 'debug mode'; done"]
          {{- else }}
          {{- if .Values.command }}
          command: {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: NDUSTRIAL_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            {{- if .Values.extraEnvVars }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.extraEnvVarsMap }}
            {{- range $key, $val := .Values.extraEnvVarsMap }}
            - name: {{ $key }}
            {{- if (kindIs "map" $val ) }}
            {{- include "nio-common.tplvalues.render" (dict "value" $val "context" $) | nindent 14 }}
            {{- else }}
              value: {{ include "nio-common.tplvalues.render" (dict "value" $val "context" $) | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.datadog }}
            {{- include "nio-common.datadog.envs" (dict "value" .Values.datadog "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsCMs }}
            {{- range $cm := .Values.extraEnvVarsCMs }}
            - configMapRef:
                name: {{ include "nio-common.tplvalues.render" (dict "value" $cm "context" $) }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecrets }}
            {{- range $secret := .Values.extraEnvVarsSecrets }}
            - secretRef:
                name: {{ include "nio-common.tplvalues.render" (dict "value" $secret "context" $) }}
            {{- end }}
            {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "nio-common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- with .Values.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if not .Values.image.debug }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.startupProbe.httpGet }}
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: http
            {{- end }}
            {{ omit .Values.startupProbe "enabled" "httpGet" "path" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.livenessProbe.httpGet }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            {{- end }}
            {{ omit .Values.livenessProbe "enabled" "httpGet" "path" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.readinessProbe.httpGet }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            {{- end }}
            {{ omit .Values.readinessProbe "enabled" "httpGet" "path" | toYaml | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.sidecars }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.extraVolumes }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
