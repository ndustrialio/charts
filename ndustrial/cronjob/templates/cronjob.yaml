apiVersion: {{ template "nio-common.capabilities.cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ include "nio-common.names.fullname" . }}
  labels: {{- include "nio-common.labels.standard" . | nindent 4 }}
    ndustrial.io/component: cronjob
    {{- if .Values.labels }}
    {{- include "nio-common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations }}
  annotations: {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .Values.schedule | quote }}
  {{- with .Values.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels: {{- include "nio-common.labels.standard" . | nindent 8 }}
        ndustrial.io/component: cronjob
        {{- if .Values.labels }}
        {{- include "nio-common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
      {{- if .Values.datadog }}
        {{- include "nio-common.datadog.annotations" (dict "value" .Values.datadog "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ . }}
      {{- end }}
      {{- with .Values.backoffLimit }}
      backoffLimit: {{ . }}
      {{- end }}
      {{- with .Values.completions }}
      completions: {{ . }}
      {{- end }}
      {{- with .Values.parallelism }}
      parallelism: {{ . }}
      {{- end }}
      {{- with .Values.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ . }}
      {{- end }}

      template:
        metadata:
          labels:
            ndustrial.io/component: cronjob
            {{- include "nio-common.labels.standard" . | nindent 12 }}
            {{- if .Values.labels }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.labels "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.podLabels }}
            {{- toYaml .Values.podLabels | nindent 12 }}
            {{- end }}
          {{- if .Values.podAnnotations }}
          annotations: {{- toYaml .Values.podAnnotations | nindent 12 }}
          {{- end }}
        spec:
          restartPolicy: Never
          shareProcessNamespace: {{ .Values.shareProcessNamespace }}
          {{- include "cronjob.imagePullSecrets" . | nindent 10 }}
          {{- if .Values.podSecurityContext.enabled }}
          securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.priorityClassName }}
          priorityClassName: {{ .Values.priorityClassName | quote }}
          {{- end }}
          {{- if .Values.affinity }}
          affinity: {{- include "nio-common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 12 }}
          {{- else }}
          affinity:
            podAffinity: {{- include "nio-common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 14 }}
            podAntiAffinity: {{- include "nio-common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 14 }}
            nodeAffinity: {{- include "nio-common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 14 }}
          {{- end }}
          {{- if .Values.nodeSelector }}
          nodeSelector: {{- include "nio-common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.tolerations }}
          tolerations: {{- include "nio-common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.hostAliases }}
          hostAliases: {{- include "nio-common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 12 }}
          {{- end }}
          initContainers:
            {{- if .Values.initContainers }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 12 }}
            {{- end }}
          serviceAccountName: {{ template "cronjob.serviceAccountName" . }}
          containers:
            - name: {{ .Chart.Name }}
              image: {{ template "cronjob.image" . }}
              imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
              {{- if .Values.command }}
              command: {{- include "nio-common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 16 }}
              {{- end }}
              {{- if .Values.args }}
              args: {{- include "nio-common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 16 }}
              {{- end }}
              {{- if .Values.containerSecurityContext.enabled }}
              securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 16 }}
              {{- end }}
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                {{- if .Values.extraEnvVars }}
                {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 16 }}
                {{- end }}
                {{- if .Values.extraEnvVarsMap }}
                {{- range $key, $val := .Values.extraEnvVarsMap }}
                - name: {{ $key }}
                  value: {{ include "nio-common.tplvalues.render" (dict "value" $val "context" $) | quote }}
                {{- end }}
                {{- end }}
                {{- if .Values.datadog }}
                {{- include "nio-common.datadog.envs" (dict "value" .Values.datadog "context" $) | nindent 16 }}
                {{- end }}
              envFrom:
                {{- if .Values.extraEnvVarsCM }}
                - configMapRef:
                    name: {{ include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
                {{- end }}
                {{- if .Values.extraEnvVarsCMs }}
                {{- range $cm := .Values.extraEnvVarsCMs }}
                - configMapRef:
                    name: {{ include "nio-common.tplvalues.render" (dict "value" $cm "context" $) }}
                {{- end }}
                {{- end }}
                {{- if .Values.extraEnvVarsSecret }}
                - secretRef:
                    name: {{ include "nio-common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
                {{- end }}
                {{- if .Values.extraEnvVarsSecrets }}
                {{- range $secret := .Values.extraEnvVarsSecrets }}
                - secretRef:
                    name: {{ include "nio-common.tplvalues.render" (dict "value" $secret "context" $) }}
                {{- end }}
                {{- end }}
              {{- if .Values.lifecycleHooks }}
              lifecycle: {{- include "nio-common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 16 }}
              {{- end }}
              {{- if .Values.resources }}
              resources: {{- toYaml .Values.resources | nindent 16 }}
              {{- end }}
              volumeMounts:
                {{- if .Values.extraVolumeMounts }}
                {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 16 }}
                {{- end }}
            {{- if .Values.sidecars }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 12 }}
            {{- end }}
          volumes:
            {{- if .Values.extraVolumes }}
            {{- include "nio-common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 12 }}
            {{- end }}
