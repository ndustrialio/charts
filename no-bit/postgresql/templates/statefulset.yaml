apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nio-common.names.fullname" . }}
  labels:
    {{ include "postgres.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: cursor-storage-postgres-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "nio-common.names.fullname" . }}
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: {{ include "nio-common.names.fullname" . }}
      labels:
        {{ include "postgres.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: {{ include "nio-common.names.fullname" . }}
      imagePullSecrets:
        - name: nio-quay-pull-secret
      automountServiceAccountToken: false
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: {{ .Release.Name }}
                    app.kubernetes.io/name: {{ include "nio-common.names.fullname" . }}
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      containers:
        - name: postgresql
          image: postgres:16.10
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_USER
              value: {{ .Values.username }}
            - name: POSTGRES_DB
              value: {{ .Values.database }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "nio-common.names.fullname" . }}
                  key: password
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$(PGOSTGRES_USER)" -d "dbname=$(POSTGRES_PASSWORD)" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - exec pg_isready -U "$(PGOSTGRES_USER)" -d "dbname=$(POSTGRES_PASSWORD)" -h 127.0.0.1 -p 5432
          resources:
            limits:
              cpu: "1.5"
              ephemeral-storage: 2Gi
              memory: 3072Mi
            requests:
              cpu: "1.0"
              ephemeral-storage: 50Mi
              memory: 2048Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /var/lib/postgresql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /var/lib/postgresql/tmp
              subPath: app-tmp-dir
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /var/lib/postgresql
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
